** INTEGER, FLOAT, VARNAME, STRING

FUNCTION_DEC -> create VARNAME { EXPR }
EXPR -> (VARDEC | INPUT | OUTPUT | VARASSIGN | IF_STMT |  WHILE_LOOP) EXPR_STMT
EXPR_STMT -> EXPR | E
VARDEC -> make VARNAME ; | make VARNAME = (NUMBER | VARNAME | STRING | FUNCTION_CALL) ;
NUMBER -> INTEGER | FLOAT
MATH_EXPR -> (INTEGER|FLOAT) (+|-|/|*) (FLOAT|INTEGER) MATH_EXPR_EXTENSION MATH_EXPR_EXTENSION -> (+|-|/|*) (INTEGER|FLOAT) | E
INPUT -> PURR VARNAME ;
OUTPUT -> meow (STRING | VARNAME | NUMBER)
VARASSIGN -> VARNAME = (NUMBER | VARNAME | STRING | FUNCTION_CALL | MATH_EXPR)
IF_STMT -> if (COMP_EXPR) { EXPR } | if (COMP_EXPR) { EXPR } else { EXPR }
COMP_EXPR -> (NUMBER | VARNAME) ( > | = | < | >= | <= | == | !=) (NUMBER | VARNAME)
WHILE_LOOP -> rollwhile(COMP_EXPR) { EXPR }

*********************************************************************************
SIMPLIFIED GRAMMAR
