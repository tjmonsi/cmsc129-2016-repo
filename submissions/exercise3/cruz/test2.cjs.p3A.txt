Start
Main
Fn-def
epsilon
function
main
(
epsilon
)
{
Code-Block
}
newline
Code-Block
\n
epsilon
Statement
Code-Block
Var-dec
;
var
Var-dec'
ar
Var-dec''
=
Expression
load-call
load
Fn-call'
(
Fn-Param
)
Expression
epsilon
"input.file"
epsilon
newline
Code-Block
\n
epsilon
Statement
Code-Block
Var-dec
;
var
Var-dec'
i
Var-dec''
=
Expression
Number
epsilon
0
newline
Code-Block
\n
epsilon
Statement
Code-Block
Wh-loop
while
(
Expression
)
{
Code-Block
}
i
ID-Exp
Num-Exp
Bool
<
Expression
arrlen
ID-Exp
Fn-call'
epsilon
(
Fn-Param
)
Expression
epsilon
ar
epsilon
newline
Code-Block
\n
epsilon
Statement
Code-Block
print-call
;
print
Fn-call'
(
Fn-Param
)
Expression
epsilon
ar
ID-Exp
Array
epsilon
[
Expression
]
epsilon
i
epsilon
newline
Code-Block
\n
epsilon
Statement
Code-Block
Asg-Exp
;
i
Asg-Exp'
=
Expression
i
ID-Exp
Num-Exp
Math-Exp'
+
Math-Exp
Term
epsilon
Factor
epsilon
Number
1
newline
epsilon
\n
epsilon
newline
epsilon
\n
epsilon
